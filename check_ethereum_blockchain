#!/bin/bash
#
# Author: Luis Daniel Lucio Quiroz <dlucio@okay.com.mx>
#

while getopts ":H:p:w:c:" opt; do
	case $opt in
		H)
			ethereum_node_ip=$OPTARG
			;;
		p)
			ethereum_node_port=$OPTARG
			;;
		w)
			ethereum_warning=$OPTARG
			;;
		c)
			ethereum_critical=$OPTARG
			;;
		\?)
      
			echo "UNKNOWN- Invalid option: -$OPTARG" >&2
      			exit 3
      			;;
    		:)
	      		echo "UNKNOWN- Option -$OPTARG requires an argument." >&2
	      		exit 3
      		;;
	esac
done

if [ -z "$ethereum_node_ip" ]; then
	ethereum_node_ip=localhost
fi

if [ -z "$ethereum_node_port" ]; then
	ethereum_node_port=8545
fi

if [ -z "$ethereum_warning" ]; then
	ethereum_warning=5
fi

if [ -z "$ethereum_critical" ]; then
	ethereum_critical=10
fi

if [ "$ethereum_warning" -gt "$ethereum_critical" ]; then
	echo "UNKNOWN- Warning can not be greater than Critical"
	exit 3
fi

#
# Get Local Data
#
local_json=$(curl http://$ethereum_node_ip:$ethereum_node_port -sSf -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}' -H "Content-Type: application/json" | jq -r ".result")
if [ $? -ne "0" ]; then
	echo "UNKNOWN- Could not fetch local information"
	exit 3
fi
local_blockchain10=$(($local_json))

#
# Get Remote Data
#
#remote_count=$(curl https://api.blockchair.com/ethereum -sSf | jq -r ".[0].mempool_best_block")
remote_count=$(curl https://www.etherchain.org/api/blocks/count -sSf | jq -r ".count")
if [ $? -ne "0" ]; then
	echo "UNKNOWN- Could not fetch remote information"
	exit 3
fi

diff=$(expr $remote_count - $local_blockchain10)
output="local block chain = $local_blockchain10, global block chain = $remote_count | local=$local_blockchain10, global=$remote_count"

if [ "$diff" -lt "$ethereum_warning" ]; then
	echo "OK- $output"
	exit 0
elif [ "$diff" -ge "$ethereum_warning" ] && [ "$diff" -lt "$ethereum_critical" ]; then
	echo "WARNING- $output"
	exit 1
elif [ "$diff" -ge "$ethereum_critical" ]; then
	echo "CRITICAL- $output"
	exit 2
else
	echo "UNKNOWN- $output"
	exit 3
fi
